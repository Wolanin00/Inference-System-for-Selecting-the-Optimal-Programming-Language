name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  format-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: Configure Git user identity
        run: |
          git config --global user.email "szewczykmateusz64@gmail.com"
          git config --global user.name "Mateusz Szewczyk"

      - name: Run Black and Commit
        run: |
          black .
          git add .
          git status
          git commit -m "Auto-commit changes" || true  # Continue even if there are no changes
          git log -n 1
          
          # Determine the branch and push accordingly
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            git push origin main
          elif [[ "$GITHUB_REF" == "refs/heads/dev" ]]; then
            git push origin dev
          else
            echo "Skipping push for branch $GITHUB_REF"
          fi

  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get install xvfb

    - name: Run tests
      run: |
        xvfb-run python -m pytest

  build-docs:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'  # Only run when pushing to main

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Sphinx and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx
          pip install furo

      - name: Build Sphinx documentation
        run: |
          cd docs
          make clean && make html

      - name: Check if gh-pages branch exists, if not create it
        run: |
          git fetch origin gh-pages:gh-pages || git checkout --orphan gh-pages

      - name: Configure Git user identity
        run: |
          git config user.email "szewczykmateusz64@gmail.com"
          git config user.name "Mateusz Szewczyk"

      - name: Check for uncommitted changes
        run: |
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit -m "Committing changes before switching branches"
          fi

      - name: Copy files to gh-pages branch
        run: |
          git checkout gh-pages
          rm -rf *
          cp -r ../docs/_build/html/* .
          git add .
          git commit -m "Update documentation"
          git push origin gh-pages
